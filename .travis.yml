language: c  # We are not using the Python infrastructure
dist: trusty
sudo: required

env:
  global:
    - secure: "fYNzSW9BZeANbLCX+fluHs9DHQ4IX5mSu/8d3sqJbvkjSMhU7ZEh/AW00i4smfQWcja+3KRyBjjSvTfvYIW3wNlF4AcR63mf1t+D/Wax2OvwGgomvyad1xghD1p0b18UB+ADSxwOaeuhvTUez0tth6QQWLP+gvZJ2D0LmdezMEY="
    - secure: "jtMm9VW67fThl/3GCwEapG5atUTIKAI9KYro/xYUjw9nWU28+vV/mNVwqza4G01jPmNeNK9T+hBBH7IOAumU/Sgkw8V0PJHROsBiAUHm3p9IIuQkEUuHwlOUUKYBL9SO74xyabrekf+celG00qnp5XI1qiIR/X5SFWd34HIFnyU="

matrix:
  include:
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="yes"
      os: linux
    - python: "3.6"
      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="no"
      os: linux
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="no"
      os: osx
      osx_image: xcode8.3
    - python: "3.6"
      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="no"
      os: osx
      osx_image: xcode8.3
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
      os: linux
    - python: "3.6"
      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
      os: linux
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
      os: osx
      osx_image: xcode8.3
    - python: "3.6"
      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
      os: osx
      osx_image: xcode8.3
  allow_failures:
    - env: DEPENDENCIES="stable"
  fast_finish: true

# Use miniconda to install binary versions of numpy etc. from continuum
# analytic's repository. Follows an approach described by Dan Blanchard:
# https://gist.github.com/dan-blanchard/7045057
before_install:
- if [ ${PYTHON:0:1} == "2" ]; then
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
    else
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
  fi
- chmod +x miniconda.sh
- ./miniconda.sh -b -p ~/miniconda

# command to install dependencies
install:
  - source ~/miniconda/etc/profile.d/conda.sh
  - conda activate
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        COMPILER_PACKAGE=gxx_linux-64;
    else
        COMPILER_PACKAGE=clangxx_osx-64;
    fi
  - travis_retry conda install --yes --quiet -c conda-forge brian2 sympy=1.1 py-cpuinfo=3 nose python=$PYTHON $COMPILER_PACKAGE
  - echo CC=$CC
  - echo CXX=$CXX
  # we deinstall Brian 2 for the latest version, but keep the dependencies
  - if [ "$DEPENDENCIES" == "latest" ]; then
        conda uninstall --yes --quiet brian2;
        pip install git+https://github.com/brian-team/brian2.git;
    fi
  - cd ../..
  - if [ "$DEPENDENCIES" == "latest" ]; then
       (cd brian-team/brian2genn/genn; git checkout master)
    fi
  - export GENN_PATH=$(pwd)/brian-team/brian2genn/genn
  - cd brian-team/brian2genn

# command to run tests
script:
  - pip install .
  - python scripts/run_brian_tests_CPU.py

after_success:
  # Install minimal CUDA components to build the conda package and upload to anaconda.org if this is a tagged release in the master branch
  - if [[ "$TRAVIS_OS_NAME" == "linux" && $ANACONDA_UPLOAD == 'yes' ]]; then
      CUDA_URL=http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_8.0.61-1_amd64.deb;
      CUDA_FILE=/tmp/cuda_install.deb;
      travis_retry curl $CUDA_URL -o $CUDA_FILE &&
      sudo dpkg -i $CUDA_FILE &&
      rm -f $CUDA_FILE;
      sudo apt-get update -qq -y &&
      sudo apt-get install -q -y cuda-core-8-0 cuda-misc-headers-8-0 cuda-cudart-dev-8-0 &&
      export CUDA_PATH=/usr/local/cuda-8.0/;
      travis_retry conda install --yes --quiet conda-build &&
      python scripts/build_conda_packages.py;
      if [[ $TRAVIS_PULL_REQUEST == 'false' && $TRAVIS_REPO_SLUG == 'brian-team/brian2genn' && ! -z $TRAVIS_TAG ]]; then
        conda install --yes --quiet anaconda-client;
        python scripts/conda-server-push.py $TRAVIS_TAG;
      fi;
    fi

notifications:
  email: false
