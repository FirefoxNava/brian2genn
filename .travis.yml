language: c  # We are not using the Python infrastructure
sudo: false  # Make sure we are using the container-based infrastructure

matrix:
  include:
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="stable"
      os: linux
    - python: "3.5"
      env: PYTHON="3.5" CONDA_PY="35" ARCHITECTURE="x86_64" DEPENDENCIES="stable"
      os: linux
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="stable"
      os: osx
    - python: "3.5"
      env: PYTHON="3.5" CONDA_PY="35" ARCHITECTURE="x86_64" DEPENDENCIES="stable"
      os: osx
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest"
      os: linux
    - python: "3.5"
      env: PYTHON="3.5" CONDA_PY="35" ARCHITECTURE="x86_64" DEPENDENCIES="latest"
      os: linux
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest"
      os: osx
    - python: "3.5"
      env: PYTHON="3.5" CONDA_PY="35" ARCHITECTURE="x86_64" DEPENDENCIES="latest"
      os: osx
  allow_failures:
    env: DEPENDENCIES="latest"
  fast_finish: true

# Use miniconda to install binary versions of numpy etc. from continuum
# analytic's repository. Follows an approach described by Dan Blanchard:
# https://gist.github.com/dan-blanchard/7045057
before_install:
- if [ ${PYTHON:0:1} == "2" ]; then
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
    else
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
  fi
- chmod +x miniconda.sh
- ./miniconda.sh -b -p ~/miniconda
- export PATH=~/miniconda/bin:$PATH

# command to install dependencies
install:
  - if [ "$DEPENDENCIES" == "stable" ]; then
        BRIAN_CHANNEL="brian-team";
    else
        BRIAN_CHANNEL="brian-team/label/dev";
    fi
  - travis_retry conda install --yes --quiet -c brian-team py-cpuinfo nose python=$PYTHON
  - travis_retry conda install --yes --quiet -c $BRIAN_CHANNEL brian2
  # Install gcc via conda -- the version provided by Ubuntu in this container image is too old
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then conda install --yes --quiet gcc; fi
  - cd ../..
  - if [ "$DEPENDENCIES" == "latest" ]; then
       BRANCH_ARGUMENT="-b development";
    fi
  - travis_retry git clone $BRANCH_ARGUMENT https://github.com/genn-team/genn.git
  - export GENN_PATH=$(pwd)/genn
  - cd brian-team/brian2genn

# command to run tests
script:
  - pip install .
  - python scripts/run_brian_tests_CPU.py

notifications:
  email: false
