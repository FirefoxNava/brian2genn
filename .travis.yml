language: c  # We are not using the Python infrastructure
dist: trusty
sudo: required

env:
  global:
    - secure: "fYNzSW9BZeANbLCX+fluHs9DHQ4IX5mSu/8d3sqJbvkjSMhU7ZEh/AW00i4smfQWcja+3KRyBjjSvTfvYIW3wNlF4AcR63mf1t+D/Wax2OvwGgomvyad1xghD1p0b18UB+ADSxwOaeuhvTUez0tth6QQWLP+gvZJ2D0LmdezMEY="
    - secure: "jtMm9VW67fThl/3GCwEapG5atUTIKAI9KYro/xYUjw9nWU28+vV/mNVwqza4G01jPmNeNK9T+hBBH7IOAumU/Sgkw8V0PJHROsBiAUHm3p9IIuQkEUuHwlOUUKYBL9SO74xyabrekf+celG00qnp5XI1qiIR/X5SFWd34HIFnyU="

matrix:
  include:

#    - python: "2.7"
#      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="yes"
#      os: linux
#    - python: "3.6"
#      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="no"
#      os: linux
#    - python: "2.7"
#      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="no"
#      os: osx
#      osx_image: xcode8.3
#    - python: "3.6"
#      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="stable" ANACONDA_UPLOAD="no"
#      os: osx
#      osx_image: xcode8.3
    - python: "2.7"
      os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
      env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
    - python: "2.7"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="yes" FLOAT_DTYPE_32=yes
    - python: "3.6"
      os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
      env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
      os: osx
      osx_image: xcode8.3
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no" FLOAT_DTYPE_32=yes
      os: osx
      osx_image: xcode8.3
    - python: "3.6"
      env: PYTHON="3.6" CONDA_PY="36" ARCHITECTURE="x86_64" DEPENDENCIES="latest" ANACONDA_UPLOAD="no"
      os: osx
      osx_image: xcode8.3
  allow_failures:
    - env: DEPENDENCIES="stable"
  fast_finish: true

# Use miniconda to install binary versions of numpy etc. from continuum
# analytic's repository. Follows an approach described by Dan Blanchard:
# https://gist.github.com/dan-blanchard/7045057
before_install:
- if [ ${PYTHON:0:1} == "2" ]; then
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
    else
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    travis_retry wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
  fi
- chmod +x miniconda.sh
- ./miniconda.sh -b -p ~/miniconda

# command to install dependencies
install:
  - source ~/miniconda/etc/profile.d/conda.sh
  - conda activate
  - travis_retry conda install --yes --quiet -c conda-forge brian2 sympy=1.1 py-cpuinfo=3 nose python=$PYTHON
  # we deinstall Brian 2 for the latest version, but keep the dependencies
  - if [ "$DEPENDENCIES" == "latest" ]; then
        conda uninstall --yes --quiet brian2;
        pip install git+https://github.com/brian-team/brian2.git;
    fi
  - cd ../..
  - git clone --depth=1 https://github.com/genn-team/genn.git
  - if [ "$DEPENDENCIES" == "stable" ]; then
      latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
      (cd genn; git checkout $latestTag)
    fi
  - export GENN_PATH=$(pwd)/genn
  - cd brian-team/brian2genn

# command to run tests
script:
  - eval "${MATRIX_EVAL}"
  - echo CC=$CC
  - echo CXX=$CXX
  - pip install .
  - if [ "$FLOAT_DTYPE_32" == "yes" ]; then
      python scripts/run_brian_tests_CPU_32bit.py;
    else
      python scripts/run_brian_tests_CPU.py;
    fi

notifications:
  email: false
