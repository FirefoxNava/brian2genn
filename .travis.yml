language: c  # We are not using the Python infrastructure
sudo: false  # Make sure we are using the container-based infrastructure

matrix:
  include:
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64"
      os: linux
    - python: "3.5"
      env: PYTHON="3.5" CONDA_PY="35" ARCHITECTURE="x86_64"
      os: linux
    - python: "2.7"
      env: PYTHON="2.7" CONDA_PY="27" ARCHITECTURE="x86_64"
      os: osx
    - python: "3.5"
      env: PYTHON="3.5" CONDA_PY="35" ARCHITECTURE="x86_64"
      os: osx

# Use miniconda to install binary versions of numpy etc. from continuum
# analytic's repository. Follows an approach described by Dan Blanchard:
# https://gist.github.com/dan-blanchard/7045057
before_install:
- if [ ${PYTHON:0:1} == "2" ]; then
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
    else
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-$ARCHITECTURE.sh -O miniconda.sh;
    else
    wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-$ARCHITECTURE.sh -O miniconda.sh;
    fi;
  fi
- chmod +x miniconda.sh
- ./miniconda.sh -b -p ~/miniconda
- export PATH=~/miniconda/bin:$PATH

# command to install dependencies
install:
  - conda install --yes --quiet -c brian-team brian2 nose
  # Install gcc via conda -- the version provided by Ubuntu in this container image is too old
  - conda install --yes --quiet gcc
  - cd ../..
  - git clone https://github.com/genn-team/genn.git
  - export GENN_PATH=$(pwd)/genn
  - export PATH=$PATH:$GENN_PATH/lib/bin
  - cd brian-team/brian2genn

# command to run tests
script:
  - pip install .
  - python scripts/run_brian_tests_CPU.py

notifications:
  email: false
