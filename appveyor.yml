environment:
  matrix:
    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "stable"

    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "stable"

    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "latest"

    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "latest"

matrix:
  allow_failures:
    - DEPENDENCIES: "latest"

install:
  # Add the paths for anaconda
  - 'set PATH=%PYTHON%;%PYTHON%\Library\bin;%PYTHON%\Scripts;%PATH%'
  # Install Brian 2
  - 'conda install --yes --quiet -c brian-team py-cpuinfo nose'
  - 'if "%DEPENDENCIES%" == "stable" (set BRIAN_CHANNEL="brian-team") else (set BRIAN_CHANNEL="brian-team/label/dev")'
  - 'conda install --yes --quiet -c %BRIAN_CHANNEL% brian2'
  # Install GeNN
  - # Clone the GeNN submodule
  - 'git submodule update --init --recursive'
  - 'if "%DEPENDENCIES%" == "latest" (cd genn && git checkout development && cd ..)'
  - 'set GENN_PATH=%CD%\genn'

build: false  # not a C# project

test_script:
  - 'pip install .'
  - 'python scripts/run_brian_tests_CPU.py'

after_test:
  - 'powershell.exe -Command "Invoke-WebRequest https://developer.nvidia.com/compute/cuda/8.0/Prod2/network_installers/cuda_8.0.61_windows_network-exe -OutFile cuda-installer.exe"'
  - 'cuda-installer.exe -s compiler_8.0 cudart_8.0'
  - 'set CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0'
  - 'conda install --yes --quiet conda-build'
  - 'conda build -c brian-team conda_recipe'
  - 'python scripts/move_conda_package.py conda_recipe'

artifacts:
  - path: '*.tar.bz2'
    name: conda package
