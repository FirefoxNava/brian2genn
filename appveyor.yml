environment:
  ANACONDA_TOKEN:
    secure: IHuV8pqZulsweCS/2VLZNkJN3Vv0c23Cr6Yiudf/O8u/5IEU31qKLRbsqbKSj7Ez
  TWINE_PASSWORD:
    secure: 20R+TzZ9NRmt9ttc5/Bb8w==

  matrix:
    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "stable"
      PYPI_UPLOAD_SOURCE: "no"
      ANACONDA_UPLOAD: "yes"
    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "stable"
      ANACONDA_UPLOAD: "no"
      PYPI_UPLOAD_SOURCE: "no"
    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "stable"
      ANACONDA_UPLOAD: "no"
      PYPI_UPLOAD_SOURCE: "yes"
    - PYTHON: "C:\\Miniconda36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "latest"
      ANACONDA_UPLOAD: "no"
      PYPI_UPLOAD_SOURCE: "no"
    - PYTHON: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "latest"
      ANACONDA_UPLOAD: "no"
      PYPI_UPLOAD_SOURCE: "no"
    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      platform: x64
      DEPENDENCIES: "latest"
      ANACONDA_UPLOAD: "no"
      PYPI_UPLOAD_SOURCE: "no"
matrix:
  allow_failures:
    - DEPENDENCIES: "latest"

install:
  # Add the paths for anaconda
  - 'set PATH=%PYTHON%;%PYTHON%\Library\bin;%PYTHON%\Scripts;%PATH%'
  # Install Brian 2
  - 'conda install --yes --quiet -c brian-team py-cpuinfo nose'
  - 'if "%DEPENDENCIES%" == "stable" (set BRIAN_CHANNEL="brian-team") else (set BRIAN_CHANNEL="brian-team/label/dev")'
  - 'conda install --yes --quiet -c %BRIAN_CHANNEL% brian2'
  # Install GeNN
  - # Clone the GeNN submodule
  - 'git submodule update --init --recursive'
  - 'if "%DEPENDENCIES%" == "latest" (cd genn && git checkout development && cd ..)'
  - 'set GENN_PATH=%CD%\genn'

build: false  # not a C# project

test_script:
  - 'pip install .'
  - 'python scripts/run_brian_tests_CPU.py'

after_test:
  - 'if "%APPVEYOR_PULL_REQUEST_NUMBER%" == "" if "%APPVEYOR_REPO_NAME%" == "brian-team/brian2genn" if "%APPVEYOR_REPO_TAG%" == "true" if "%ANACONDA_UPLOAD%" == "yes" (
     powershell.exe -Command "Invoke-WebRequest https://developer.nvidia.com/compute/cuda/8.0/Prod2/network_installers/cuda_8.0.61_windows_network-exe -OutFile cuda-installer.exe" &&
     cuda-installer.exe -s compiler_8.0 cudart_8.0 &&
     set "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v8.0" &&
     conda install --yes --quiet conda-build &&
     python scripts/build_conda_packages.py &&
     conda install --yes --quiet anaconda-client &&
     conda install --yes --quiet -c conda-forge twine &&
     python scripts\conda-server-push.py %APPVEYOR_REPO_TAG_NAME%
     )'
  - 'if "%APPVEYOR_PULL_REQUEST_NUMBER%" == "" if "%APPVEYOR_REPO_NAME%" == "brian-team/brian2genn" if "%APPVEYOR_REPO_TAG%" == "true" if "%PYPI_UPLOAD_SOURCE%" == "yes" (python setup.py sdist --formats=bztar && conda install --yes --quiet -c conda-forge twine && twine upload -u marcelstimberg --skip-existing dist/*.tar.bz2)'

artifacts:
  - path: '*.tar.bz2'
    name: conda package
